{"version":3,"file":"static/js/886.8ac553a6.chunk.js","mappings":"qRAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAF5D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEoBT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCQ,EADnC,gCAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,oBACOV,EADP,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACeV,EADf,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,MAAR,MAPG,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACeV,EADf,2BAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gF,sDChDA,IAAMQ,EAAgB,iC,uKCGhBC,EAAYC,EAAAA,GAAAA,IAAH,4GAMTC,EAAcD,EAAAA,GAAAA,IAAH,yCAIXE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2D,SC0ErB,EA9EkB,WAAO,IAAD,IACdN,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAA0BW,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAU,qBADCC,EAAAA,EAAAA,MACWC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM3C,IAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAaC,GAASmB,KAAKN,EAC5B,GAAE,CAACb,IAECY,EAAL,CAIA,IACEQ,EAOER,EAPFQ,YACAC,EAMET,EANFS,MACAC,EAKEV,EALFU,eACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,aACAC,EAEEb,EAFFa,SACAC,EACEd,EADFc,OAGF,OACE,4BACE,SAAClB,EAAD,CAAUmB,GAAIb,EAAd,sBACA,UAACT,EAAD,YACE,SAACE,EAAD,WACE,gBACEqB,IAAKR,EAAchB,EAAAA,EAAgBgB,EAAcS,EACjDC,IAAKT,OAGT,4BACE,0BAAOC,KACP,2BACE,wCACc,IACZ,cAAGS,OAAQR,EAAX,SAA0BA,EAAaS,QAAQ,SAEjD,2CAEE,0BAAOR,QAET,uCAEE,0BAAOC,QAET,oCAEGC,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,gCAAmBA,IAARA,EADD,WAKhB,oDACA,2BACE,yBACE,SAAC,KAAD,CAASP,GAAG,OAAOX,MAAO,CAAEC,KAAMH,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAASa,GAAG,UAAUX,MAAO,CAAEC,KAAMH,GAArC,iCAOR,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QA5DL,CAgEF,C","sources":["api/api.jsx","const/secureBaseUrl.jsx","pages/MovieInfo/MovieInfo.styled.js","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '003c13e6e40e640c229ce092669f5920';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieInfo(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 270px);\n  gap: 24px;\n `;\n\nexport const CardWrapper = styled.div`\n  border: none;\n`;\n\nexport const BackLink = styled(Link)`\nposition: absolute;\nright: 40px;\n`\n","import { getMovieInfo } from 'api/api';\nimport { Suspense, useState, useEffect } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { posterBaseUrl } from 'const/secureBaseUrl';\nimport { Loader } from 'components/Loader/Loader';\nimport no_poster from 'images/no_poster.jpg';\n\nimport { CardWrapper, Container, BackLink } from './MovieInfo.styled';\n\nconst MovieInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const goBackLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieInfo(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <div>\n      <BackLink to={goBackLink}>Go Back</BackLink>\n      <Container>\n        <CardWrapper>\n          <img\n            src={poster_path ? posterBaseUrl + poster_path : no_poster}\n            alt={title}\n          />\n        </CardWrapper>\n        <div>\n          <span>{original_title}</span>\n          <ul>\n            <li>\n              User Score:{''}\n              <p rating={vote_average}>{vote_average.toFixed(2)}</p>\n            </li>\n            <li>\n              Release date:\n              <span>{release_date}</span>\n            </li>\n            <li>\n              Overview:\n              <span>{overview}</span>\n            </li>\n            <li>\n              Genres:\n              {genres.map(({ name }) => (\n                <span key={name}> {name}</span>\n              ))}\n            </li>\n          </ul>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <NavLink to=\"cast\" state={{ from: goBackLink }}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\" state={{ from: goBackLink }}>\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </Container>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","console","error","getMovieByName","query","getMovieInfo","movieId","getMovieCast","cast","getMovieReviews","posterBaseUrl","Container","styled","CardWrapper","BackLink","Link","useParams","useState","movie","setMovie","goBackLink","useLocation","state","from","useEffect","then","poster_path","title","original_title","vote_average","release_date","overview","genres","to","src","no_poster","alt","rating","toFixed","map","name","Suspense","fallback","Loader"],"sourceRoot":""}